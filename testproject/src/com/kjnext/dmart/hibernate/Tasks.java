package com.kjnext.dmart.hibernate;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

/**
 * Tasks generated by MyEclipse - Hibernate Tools
 */
public class Tasks implements java.io.Serializable {
	// Fields
	private Integer taskId;

	private UserDetail userDetail;

	private Clients clients;

	private Location location;

	private Date scheduleDate;

	private String time;

	private String venue;

	private String status;

	private String taskUniqueName;

	private Date createdDtm;

	private Date modifiedDtm;

	private Integer createdUId;

	private Integer modifiedUId;

	private Set userFeedbacks = new HashSet(0);

	private Date expiryDate;

	// Constructors

	public Date getExpiryDate() {
		return expiryDate;
	}

	public void setExpiryDate(Date expiryDate) {
		this.expiryDate = expiryDate;
	}

	/** default constructor */
	public Tasks() {
	}

	/** minimal constructor */
	public Tasks(Integer taskId, Clients clients, Location location) {
		this.taskId = taskId;
		this.clients = clients;
		this.location = location;
	}

	/** full constructor */
	public Tasks(Integer taskId, UserDetail userDetail, Clients clients,
			Location location, Date scheduleDate, String time, String venue,
			String status, Date createdDtm, Date modifiedDtm,
			Integer createdUId, Integer modifiedUId, Set userFeedbacks) {
		this.taskId = taskId;
		this.userDetail = userDetail;
		this.clients = clients;
		this.location = location;
		this.scheduleDate = scheduleDate;
		this.time = time;
		this.venue = venue;
		this.status = status;
		this.createdDtm = createdDtm;
		this.modifiedDtm = modifiedDtm;
		this.createdUId = createdUId;
		this.modifiedUId = modifiedUId;
		this.userFeedbacks = userFeedbacks;
	}

	// Property accessors

	public Integer getTaskId() {
		return this.taskId;
	}

	public void setTaskId(Integer taskId) {
		this.taskId = taskId;
	}

	public UserDetail getUserDetail() {
		return this.userDetail;
	}

	public void setUserDetail(UserDetail userDetail) {
		this.userDetail = userDetail;
	}

	public Clients getClients() {
		return this.clients;
	}

	public void setClients(Clients clients) {
		this.clients = clients;
	}

	public Location getLocation() {
		return this.location;
	}

	public void setLocation(Location location) {
		this.location = location;
	}

	public String getTime() {
		return this.time;
	}

	public void setTime(String time) {
		this.time = time;
	}

	public String getVenue() {
		return this.venue;
	}

	public void setVenue(String venue) {
		this.venue = venue;
	}

	public String getStatus() {
		return this.status;
	}

	public void setStatus(String status) {
		this.status = status;
	}

	public Date getCreatedDtm() {
		return this.createdDtm;
	}

	public void setCreatedDtm(Date createdDtm) {
		this.createdDtm = createdDtm;
	}

	public Date getModifiedDtm() {
		return this.modifiedDtm;
	}

	public void setModifiedDtm(Date modifiedDtm) {
		this.modifiedDtm = modifiedDtm;
	}

	public Integer getCreatedUId() {
		return this.createdUId;
	}

	public void setCreatedUId(Integer createdUId) {
		this.createdUId = createdUId;
	}

	public Integer getModifiedUId() {
		return this.modifiedUId;
	}

	public void setModifiedUId(Integer modifiedUId) {
		this.modifiedUId = modifiedUId;
	}

	public Set getUserFeedbacks() {
		return this.userFeedbacks;
	}

	public void setUserFeedbacks(Set userFeedbacks) {
		this.userFeedbacks = userFeedbacks;
	}

	public Date getScheduleDate() {
		return scheduleDate;
	}

	public void setScheduleDate(Date scheduleDate) {
		this.scheduleDate = scheduleDate;
	}

	public String getStatusLabel() {
		if ("INITIATED_ADMIN".equals(getStatus())) {
			return "Task Assigned to Agent";
		}
		if ("INITIATED_USER".equals(getStatus())) {
			return "Accepted Task by Agent";
		}
		if ("FINISHED_USER".equals(getStatus())) {
			return "Feedback Submitted by Agent";
		}
		if ("INITIATED_ADMIN_MULTIUSER".equals(getStatus())) {
			return "Waiting for Acceptance";
		}
		if ("INITIATED_USER_MULTIUSER_ACCEPT".equals(getStatus())) {
			return "Agent has shown Interest";
		}
		if ("INITIATED_USER_MULTIUSER_REJECT".equals(getStatus())) {
			return "Agent not Interested";
		}
		if ("REJECTED_TASK".equals(getStatus())) {
			return "Admin Rejected User";
		}
		if ("INACTIVATED_ADMIN".equals(getStatus())) {
			return "Admin Inactivated task";
		}
		return "Pending";
	}

	/**
	 * @return the taskUniqueName
	 */
	public String getTaskUniqueName() {
		return taskUniqueName;
	}

	/**
	 * @param taskUniqueName
	 *            the taskUniqueName to set
	 */
	public void setTaskUniqueName(String taskUniqueName) {
		this.taskUniqueName = taskUniqueName;
	}

}